version: "3.6"
services:
  postgres:
    image: postgres:15
    restart: always
    volumes:
      - db_data:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      POSTGRES_PASSWORD: ${PG_DATABASE_SECRET}
  graphql-engine:
    image: hasura/graphql-engine:v2.33.0
    ports:
      - "8080:8080"
    restart: always
    env_file:
      - .env
    environment:
      ## postgres database to store Hasura metadata
      HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://${HASURA_GRAPHQL_METADATA_DATABASE_USER}:${HASURA_GRAPHQL_METADATA_DATABASE_SECRET}@${HASURA_GRAPHQL_METADATA_DATABASE_ENDPOINT}:${HASURA_GRAPHQL_METADATA_DATABASE_PORT}/${HASURA_GRAPHQL_METADATA_DATABASE_NAME}
      ## this env var can be used to add the above postgres database to Hasura as a data source. this can be removed/updated based on your needs
      PG_DATABASE_URL: postgres://${PG_DATABASE_USER}:${PG_DATABASE_SECRET}@${PG_DATABASE_ENDPOINT}:${PG_DATABASE_PORT}/${PG_DATABASE_NAME}
      ## enable the console served by server
      HASURA_GRAPHQL_ENABLE_CONSOLE: "false" # set to "false" to disable console
      ## enable debugging mode. It is recommended to disable this in production
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      ## uncomment next line to run console offline (i.e load console assets from server instead of CDN)
      # HASURA_GRAPHQL_CONSOLE_ASSETS_DIR: /srv/console-assets
      ## uncomment next line to set an admin secret
      HASURA_GRAPHQL_ADMIN_SECRET: ${HASURA_GRAPHQL_ADMIN_SECRET}
volumes:
  db_data:
