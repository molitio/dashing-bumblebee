schema {
  query: query_root
  mutation: mutation_root
  subscription: subscription_root
}

"""
whether this query should be cached (Hasura Cloud only)
"""
directive @cached(
  """
  measured in seconds
  """
  ttl: Int! = 60

  """
  refresh the cache entry
  """
  refresh: Boolean! = false
) on QUERY

"""
Boolean expression to compare columns of type "String". All fields are combined with logical 'AND'.
"""
input String_comparison_exp {
  _eq: String
  _gt: String
  _gte: String

  """
  does the column match the given case-insensitive pattern
  """
  _ilike: String
  _in: [String!]

  """
  does the column match the given POSIX regular expression, case insensitive
  """
  _iregex: String
  _is_null: Boolean

  """
  does the column match the given pattern
  """
  _like: String
  _lt: String
  _lte: String
  _neq: String

  """
  does the column NOT match the given case-insensitive pattern
  """
  _nilike: String
  _nin: [String!]

  """
  does the column NOT match the given POSIX regular expression, case insensitive
  """
  _niregex: String

  """
  does the column NOT match the given pattern
  """
  _nlike: String

  """
  does the column NOT match the given POSIX regular expression, case sensitive
  """
  _nregex: String

  """
  does the column NOT match the given SQL regular expression
  """
  _nsimilar: String

  """
  does the column match the given POSIX regular expression, case sensitive
  """
  _regex: String

  """
  does the column match the given SQL regular expression
  """
  _similar: String
}

"""
ordering argument of a cursor
"""
enum cursor_ordering {
  """
  ascending ordering of the cursor
  """
  ASC

  """
  descending ordering of the cursor
  """
  DESC
}

"""
mutation root
"""
type mutation_root {
  """
  delete data from the table: "resource_db_schema.resource"
  """
  delete_resource_db_schema_resource(
    """
    filter the rows which have to be deleted
    """
    where: resource_db_schema_resource_bool_exp!
  ): resource_db_schema_resource_mutation_response

  """
  delete single row from the table: "resource_db_schema.resource"
  """
  delete_resource_db_schema_resource_by_pk(
    id: uuid!
  ): resource_db_schema_resource

  """
  delete data from the table: "resource_db_schema.resource_collection"
  """
  delete_resource_db_schema_resource_collection(
    """
    filter the rows which have to be deleted
    """
    where: resource_db_schema_resource_collection_bool_exp!
  ): resource_db_schema_resource_collection_mutation_response

  """
  delete single row from the table: "resource_db_schema.resource_collection"
  """
  delete_resource_db_schema_resource_collection_by_pk(
    id: uuid!
  ): resource_db_schema_resource_collection

  """
  delete data from the table: "resource_db_schema.user_private"
  """
  delete_resource_db_schema_user_private(
    """
    filter the rows which have to be deleted
    """
    where: resource_db_schema_user_private_bool_exp!
  ): resource_db_schema_user_private_mutation_response

  """
  delete single row from the table: "resource_db_schema.user_private"
  """
  delete_resource_db_schema_user_private_by_pk(
    id: uuid!
  ): resource_db_schema_user_private

  """
  delete data from the table: "resource_db_schema.user_public"
  """
  delete_resource_db_schema_user_public(
    """
    filter the rows which have to be deleted
    """
    where: resource_db_schema_user_public_bool_exp!
  ): resource_db_schema_user_public_mutation_response

  """
  delete single row from the table: "resource_db_schema.user_public"
  """
  delete_resource_db_schema_user_public_by_pk(
    id: uuid!
  ): resource_db_schema_user_public

  """
  insert data into the table: "resource_db_schema.resource"
  """
  insert_resource_db_schema_resource(
    """
    the rows to be inserted
    """
    objects: [resource_db_schema_resource_insert_input!]!

    """
    upsert condition
    """
    on_conflict: resource_db_schema_resource_on_conflict
  ): resource_db_schema_resource_mutation_response

  """
  insert data into the table: "resource_db_schema.resource_collection"
  """
  insert_resource_db_schema_resource_collection(
    """
    the rows to be inserted
    """
    objects: [resource_db_schema_resource_collection_insert_input!]!

    """
    upsert condition
    """
    on_conflict: resource_db_schema_resource_collection_on_conflict
  ): resource_db_schema_resource_collection_mutation_response

  """
  insert a single row into the table: "resource_db_schema.resource_collection"
  """
  insert_resource_db_schema_resource_collection_one(
    """
    the row to be inserted
    """
    object: resource_db_schema_resource_collection_insert_input!

    """
    upsert condition
    """
    on_conflict: resource_db_schema_resource_collection_on_conflict
  ): resource_db_schema_resource_collection

  """
  insert a single row into the table: "resource_db_schema.resource"
  """
  insert_resource_db_schema_resource_one(
    """
    the row to be inserted
    """
    object: resource_db_schema_resource_insert_input!

    """
    upsert condition
    """
    on_conflict: resource_db_schema_resource_on_conflict
  ): resource_db_schema_resource

  """
  insert data into the table: "resource_db_schema.user_private"
  """
  insert_resource_db_schema_user_private(
    """
    the rows to be inserted
    """
    objects: [resource_db_schema_user_private_insert_input!]!

    """
    upsert condition
    """
    on_conflict: resource_db_schema_user_private_on_conflict
  ): resource_db_schema_user_private_mutation_response

  """
  insert a single row into the table: "resource_db_schema.user_private"
  """
  insert_resource_db_schema_user_private_one(
    """
    the row to be inserted
    """
    object: resource_db_schema_user_private_insert_input!

    """
    upsert condition
    """
    on_conflict: resource_db_schema_user_private_on_conflict
  ): resource_db_schema_user_private

  """
  insert data into the table: "resource_db_schema.user_public"
  """
  insert_resource_db_schema_user_public(
    """
    the rows to be inserted
    """
    objects: [resource_db_schema_user_public_insert_input!]!

    """
    upsert condition
    """
    on_conflict: resource_db_schema_user_public_on_conflict
  ): resource_db_schema_user_public_mutation_response

  """
  insert a single row into the table: "resource_db_schema.user_public"
  """
  insert_resource_db_schema_user_public_one(
    """
    the row to be inserted
    """
    object: resource_db_schema_user_public_insert_input!

    """
    upsert condition
    """
    on_conflict: resource_db_schema_user_public_on_conflict
  ): resource_db_schema_user_public

  """
  update data of the table: "resource_db_schema.resource"
  """
  update_resource_db_schema_resource(
    """
    sets the columns of the filtered rows to the given values
    """
    _set: resource_db_schema_resource_set_input

    """
    filter the rows which have to be updated
    """
    where: resource_db_schema_resource_bool_exp!
  ): resource_db_schema_resource_mutation_response

  """
  update single row of the table: "resource_db_schema.resource"
  """
  update_resource_db_schema_resource_by_pk(
    """
    sets the columns of the filtered rows to the given values
    """
    _set: resource_db_schema_resource_set_input
    pk_columns: resource_db_schema_resource_pk_columns_input!
  ): resource_db_schema_resource

  """
  update data of the table: "resource_db_schema.resource_collection"
  """
  update_resource_db_schema_resource_collection(
    """
    sets the columns of the filtered rows to the given values
    """
    _set: resource_db_schema_resource_collection_set_input

    """
    filter the rows which have to be updated
    """
    where: resource_db_schema_resource_collection_bool_exp!
  ): resource_db_schema_resource_collection_mutation_response

  """
  update single row of the table: "resource_db_schema.resource_collection"
  """
  update_resource_db_schema_resource_collection_by_pk(
    """
    sets the columns of the filtered rows to the given values
    """
    _set: resource_db_schema_resource_collection_set_input
    pk_columns: resource_db_schema_resource_collection_pk_columns_input!
  ): resource_db_schema_resource_collection

  """
  update multiples rows of table: "resource_db_schema.resource_collection"
  """
  update_resource_db_schema_resource_collection_many(
    """
    updates to execute, in order
    """
    updates: [resource_db_schema_resource_collection_updates!]!
  ): [resource_db_schema_resource_collection_mutation_response]

  """
  update multiples rows of table: "resource_db_schema.resource"
  """
  update_resource_db_schema_resource_many(
    """
    updates to execute, in order
    """
    updates: [resource_db_schema_resource_updates!]!
  ): [resource_db_schema_resource_mutation_response]

  """
  update data of the table: "resource_db_schema.user_private"
  """
  update_resource_db_schema_user_private(
    """
    sets the columns of the filtered rows to the given values
    """
    _set: resource_db_schema_user_private_set_input

    """
    filter the rows which have to be updated
    """
    where: resource_db_schema_user_private_bool_exp!
  ): resource_db_schema_user_private_mutation_response

  """
  update single row of the table: "resource_db_schema.user_private"
  """
  update_resource_db_schema_user_private_by_pk(
    """
    sets the columns of the filtered rows to the given values
    """
    _set: resource_db_schema_user_private_set_input
    pk_columns: resource_db_schema_user_private_pk_columns_input!
  ): resource_db_schema_user_private

  """
  update multiples rows of table: "resource_db_schema.user_private"
  """
  update_resource_db_schema_user_private_many(
    """
    updates to execute, in order
    """
    updates: [resource_db_schema_user_private_updates!]!
  ): [resource_db_schema_user_private_mutation_response]

  """
  update data of the table: "resource_db_schema.user_public"
  """
  update_resource_db_schema_user_public(
    """
    sets the columns of the filtered rows to the given values
    """
    _set: resource_db_schema_user_public_set_input

    """
    filter the rows which have to be updated
    """
    where: resource_db_schema_user_public_bool_exp!
  ): resource_db_schema_user_public_mutation_response

  """
  update single row of the table: "resource_db_schema.user_public"
  """
  update_resource_db_schema_user_public_by_pk(
    """
    sets the columns of the filtered rows to the given values
    """
    _set: resource_db_schema_user_public_set_input
    pk_columns: resource_db_schema_user_public_pk_columns_input!
  ): resource_db_schema_user_public

  """
  update multiples rows of table: "resource_db_schema.user_public"
  """
  update_resource_db_schema_user_public_many(
    """
    updates to execute, in order
    """
    updates: [resource_db_schema_user_public_updates!]!
  ): [resource_db_schema_user_public_mutation_response]
}

"""
column ordering options
"""
enum order_by {
  """
  in ascending order, nulls last
  """
  asc

  """
  in ascending order, nulls first
  """
  asc_nulls_first

  """
  in ascending order, nulls last
  """
  asc_nulls_last

  """
  in descending order, nulls first
  """
  desc

  """
  in descending order, nulls first
  """
  desc_nulls_first

  """
  in descending order, nulls last
  """
  desc_nulls_last
}

type query_root {
  """
  fetch data from the table: "resource_db_schema.resource"
  """
  resource_db_schema_resource(
    """
    distinct select on columns
    """
    distinct_on: [resource_db_schema_resource_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [resource_db_schema_resource_order_by!]

    """
    filter the rows returned
    """
    where: resource_db_schema_resource_bool_exp
  ): [resource_db_schema_resource!]!

  """
  fetch aggregated fields from the table: "resource_db_schema.resource"
  """
  resource_db_schema_resource_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [resource_db_schema_resource_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [resource_db_schema_resource_order_by!]

    """
    filter the rows returned
    """
    where: resource_db_schema_resource_bool_exp
  ): resource_db_schema_resource_aggregate!

  """
  fetch data from the table: "resource_db_schema.resource" using primary key columns
  """
  resource_db_schema_resource_by_pk(id: uuid!): resource_db_schema_resource

  """
  fetch data from the table: "resource_db_schema.resource_collection"
  """
  resource_db_schema_resource_collection(
    """
    distinct select on columns
    """
    distinct_on: [resource_db_schema_resource_collection_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [resource_db_schema_resource_collection_order_by!]

    """
    filter the rows returned
    """
    where: resource_db_schema_resource_collection_bool_exp
  ): [resource_db_schema_resource_collection!]!

  """
  fetch aggregated fields from the table: "resource_db_schema.resource_collection"
  """
  resource_db_schema_resource_collection_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [resource_db_schema_resource_collection_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [resource_db_schema_resource_collection_order_by!]

    """
    filter the rows returned
    """
    where: resource_db_schema_resource_collection_bool_exp
  ): resource_db_schema_resource_collection_aggregate!

  """
  fetch data from the table: "resource_db_schema.resource_collection" using primary key columns
  """
  resource_db_schema_resource_collection_by_pk(
    id: uuid!
  ): resource_db_schema_resource_collection

  """
  fetch data from the table: "resource_db_schema.user_private"
  """
  resource_db_schema_user_private(
    """
    distinct select on columns
    """
    distinct_on: [resource_db_schema_user_private_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [resource_db_schema_user_private_order_by!]

    """
    filter the rows returned
    """
    where: resource_db_schema_user_private_bool_exp
  ): [resource_db_schema_user_private!]!

  """
  fetch aggregated fields from the table: "resource_db_schema.user_private"
  """
  resource_db_schema_user_private_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [resource_db_schema_user_private_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [resource_db_schema_user_private_order_by!]

    """
    filter the rows returned
    """
    where: resource_db_schema_user_private_bool_exp
  ): resource_db_schema_user_private_aggregate!

  """
  fetch data from the table: "resource_db_schema.user_private" using primary key columns
  """
  resource_db_schema_user_private_by_pk(
    id: uuid!
  ): resource_db_schema_user_private

  """
  fetch data from the table: "resource_db_schema.user_public"
  """
  resource_db_schema_user_public(
    """
    distinct select on columns
    """
    distinct_on: [resource_db_schema_user_public_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [resource_db_schema_user_public_order_by!]

    """
    filter the rows returned
    """
    where: resource_db_schema_user_public_bool_exp
  ): [resource_db_schema_user_public!]!

  """
  fetch aggregated fields from the table: "resource_db_schema.user_public"
  """
  resource_db_schema_user_public_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [resource_db_schema_user_public_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [resource_db_schema_user_public_order_by!]

    """
    filter the rows returned
    """
    where: resource_db_schema_user_public_bool_exp
  ): resource_db_schema_user_public_aggregate!

  """
  fetch data from the table: "resource_db_schema.user_public" using primary key columns
  """
  resource_db_schema_user_public_by_pk(
    id: uuid!
  ): resource_db_schema_user_public
}

"""
Universal resouce object
"""
type resource_db_schema_resource {
  created_at: timestamptz!
  description: String
  id: uuid!
  name: String!
  resource_owner_actual: uuid
  updated_at: timestamptz!

  """
  An object relationship
  """
  user_private: resource_db_schema_user_private
}

"""
aggregated selection of "resource_db_schema.resource"
"""
type resource_db_schema_resource_aggregate {
  aggregate: resource_db_schema_resource_aggregate_fields
  nodes: [resource_db_schema_resource!]!
}

"""
aggregate fields of "resource_db_schema.resource"
"""
type resource_db_schema_resource_aggregate_fields {
  count(
    columns: [resource_db_schema_resource_select_column!]
    distinct: Boolean
  ): Int!
  max: resource_db_schema_resource_max_fields
  min: resource_db_schema_resource_min_fields
}

"""
Boolean expression to filter rows from the table "resource_db_schema.resource". All fields are combined with a logical 'AND'.
"""
input resource_db_schema_resource_bool_exp {
  _and: [resource_db_schema_resource_bool_exp!]
  _not: resource_db_schema_resource_bool_exp
  _or: [resource_db_schema_resource_bool_exp!]
  created_at: timestamptz_comparison_exp
  description: String_comparison_exp
  id: uuid_comparison_exp
  name: String_comparison_exp
  resource_owner_actual: uuid_comparison_exp
  updated_at: timestamptz_comparison_exp
  user_private: resource_db_schema_user_private_bool_exp
}

"""
Collection of resources
"""
type resource_db_schema_resource_collection {
  created_at: timestamptz!
  id: uuid!
  name: String!
  resource_id_collection: [uuid!]
  updated_at: timestamptz!
}

"""
aggregated selection of "resource_db_schema.resource_collection"
"""
type resource_db_schema_resource_collection_aggregate {
  aggregate: resource_db_schema_resource_collection_aggregate_fields
  nodes: [resource_db_schema_resource_collection!]!
}

"""
aggregate fields of "resource_db_schema.resource_collection"
"""
type resource_db_schema_resource_collection_aggregate_fields {
  count(
    columns: [resource_db_schema_resource_collection_select_column!]
    distinct: Boolean
  ): Int!
  max: resource_db_schema_resource_collection_max_fields
  min: resource_db_schema_resource_collection_min_fields
}

"""
Boolean expression to filter rows from the table "resource_db_schema.resource_collection". All fields are combined with a logical 'AND'.
"""
input resource_db_schema_resource_collection_bool_exp {
  _and: [resource_db_schema_resource_collection_bool_exp!]
  _not: resource_db_schema_resource_collection_bool_exp
  _or: [resource_db_schema_resource_collection_bool_exp!]
  created_at: timestamptz_comparison_exp
  id: uuid_comparison_exp
  name: String_comparison_exp
  resource_id_collection: uuid_array_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "resource_db_schema.resource_collection"
"""
enum resource_db_schema_resource_collection_constraint {
  """
  unique or primary key constraint on columns "id"
  """
  resource_collection_pkey
}

"""
input type for inserting data into table "resource_db_schema.resource_collection"
"""
input resource_db_schema_resource_collection_insert_input {
  created_at: timestamptz
  id: uuid
  name: String
  resource_id_collection: [uuid!]
  updated_at: timestamptz
}

"""
aggregate max on columns
"""
type resource_db_schema_resource_collection_max_fields {
  created_at: timestamptz
  id: uuid
  name: String
  resource_id_collection: [uuid!]
  updated_at: timestamptz
}

"""
aggregate min on columns
"""
type resource_db_schema_resource_collection_min_fields {
  created_at: timestamptz
  id: uuid
  name: String
  resource_id_collection: [uuid!]
  updated_at: timestamptz
}

"""
response of any mutation on the table "resource_db_schema.resource_collection"
"""
type resource_db_schema_resource_collection_mutation_response {
  """
  number of rows affected by the mutation
  """
  affected_rows: Int!

  """
  data from the rows affected by the mutation
  """
  returning: [resource_db_schema_resource_collection!]!
}

"""
on_conflict condition type for table "resource_db_schema.resource_collection"
"""
input resource_db_schema_resource_collection_on_conflict {
  constraint: resource_db_schema_resource_collection_constraint!
  update_columns: [resource_db_schema_resource_collection_update_column!]! = []
  where: resource_db_schema_resource_collection_bool_exp
}

"""
Ordering options when selecting data from "resource_db_schema.resource_collection".
"""
input resource_db_schema_resource_collection_order_by {
  created_at: order_by
  id: order_by
  name: order_by
  resource_id_collection: order_by
  updated_at: order_by
}

"""
primary key columns input for table: resource_db_schema.resource_collection
"""
input resource_db_schema_resource_collection_pk_columns_input {
  id: uuid!
}

"""
select columns of table "resource_db_schema.resource_collection"
"""
enum resource_db_schema_resource_collection_select_column {
  """
  column name
  """
  created_at

  """
  column name
  """
  id

  """
  column name
  """
  name

  """
  column name
  """
  resource_id_collection

  """
  column name
  """
  updated_at
}

"""
input type for updating data in table "resource_db_schema.resource_collection"
"""
input resource_db_schema_resource_collection_set_input {
  created_at: timestamptz
  id: uuid
  name: String
  resource_id_collection: [uuid!]
  updated_at: timestamptz
}

"""
Streaming cursor of the table "resource_db_schema_resource_collection"
"""
input resource_db_schema_resource_collection_stream_cursor_input {
  """
  Stream column input with initial value
  """
  initial_value: resource_db_schema_resource_collection_stream_cursor_value_input!

  """
  cursor ordering
  """
  ordering: cursor_ordering
}

"""
Initial value of the column from where the streaming should start
"""
input resource_db_schema_resource_collection_stream_cursor_value_input {
  created_at: timestamptz
  id: uuid
  name: String
  resource_id_collection: [uuid!]
  updated_at: timestamptz
}

"""
update columns of table "resource_db_schema.resource_collection"
"""
enum resource_db_schema_resource_collection_update_column {
  """
  column name
  """
  created_at

  """
  column name
  """
  id

  """
  column name
  """
  name

  """
  column name
  """
  resource_id_collection

  """
  column name
  """
  updated_at
}

input resource_db_schema_resource_collection_updates {
  """
  sets the columns of the filtered rows to the given values
  """
  _set: resource_db_schema_resource_collection_set_input

  """
  filter the rows which have to be updated
  """
  where: resource_db_schema_resource_collection_bool_exp!
}

"""
unique or primary key constraints on table "resource_db_schema.resource"
"""
enum resource_db_schema_resource_constraint {
  """
  unique or primary key constraint on columns "id"
  """
  resource_pkey

  """
  unique or primary key constraint on columns "resource_owner_actual"
  """
  resource_resource_owner_actual_key
}

"""
input type for inserting data into table "resource_db_schema.resource"
"""
input resource_db_schema_resource_insert_input {
  created_at: timestamptz
  description: String
  id: uuid
  name: String
  resource_owner_actual: uuid
  updated_at: timestamptz
  user_private: resource_db_schema_user_private_obj_rel_insert_input
}

"""
aggregate max on columns
"""
type resource_db_schema_resource_max_fields {
  created_at: timestamptz
  description: String
  id: uuid
  name: String
  resource_owner_actual: uuid
  updated_at: timestamptz
}

"""
aggregate min on columns
"""
type resource_db_schema_resource_min_fields {
  created_at: timestamptz
  description: String
  id: uuid
  name: String
  resource_owner_actual: uuid
  updated_at: timestamptz
}

"""
response of any mutation on the table "resource_db_schema.resource"
"""
type resource_db_schema_resource_mutation_response {
  """
  number of rows affected by the mutation
  """
  affected_rows: Int!

  """
  data from the rows affected by the mutation
  """
  returning: [resource_db_schema_resource!]!
}

"""
input type for inserting object relation for remote table "resource_db_schema.resource"
"""
input resource_db_schema_resource_obj_rel_insert_input {
  data: resource_db_schema_resource_insert_input!

  """
  upsert condition
  """
  on_conflict: resource_db_schema_resource_on_conflict
}

"""
on_conflict condition type for table "resource_db_schema.resource"
"""
input resource_db_schema_resource_on_conflict {
  constraint: resource_db_schema_resource_constraint!
  update_columns: [resource_db_schema_resource_update_column!]! = []
  where: resource_db_schema_resource_bool_exp
}

"""
Ordering options when selecting data from "resource_db_schema.resource".
"""
input resource_db_schema_resource_order_by {
  created_at: order_by
  description: order_by
  id: order_by
  name: order_by
  resource_owner_actual: order_by
  updated_at: order_by
  user_private: resource_db_schema_user_private_order_by
}

"""
primary key columns input for table: resource_db_schema.resource
"""
input resource_db_schema_resource_pk_columns_input {
  id: uuid!
}

"""
select columns of table "resource_db_schema.resource"
"""
enum resource_db_schema_resource_select_column {
  """
  column name
  """
  created_at

  """
  column name
  """
  description

  """
  column name
  """
  id

  """
  column name
  """
  name

  """
  column name
  """
  resource_owner_actual

  """
  column name
  """
  updated_at
}

"""
input type for updating data in table "resource_db_schema.resource"
"""
input resource_db_schema_resource_set_input {
  created_at: timestamptz
  description: String
  id: uuid
  name: String
  resource_owner_actual: uuid
  updated_at: timestamptz
}

"""
Streaming cursor of the table "resource_db_schema_resource"
"""
input resource_db_schema_resource_stream_cursor_input {
  """
  Stream column input with initial value
  """
  initial_value: resource_db_schema_resource_stream_cursor_value_input!

  """
  cursor ordering
  """
  ordering: cursor_ordering
}

"""
Initial value of the column from where the streaming should start
"""
input resource_db_schema_resource_stream_cursor_value_input {
  created_at: timestamptz
  description: String
  id: uuid
  name: String
  resource_owner_actual: uuid
  updated_at: timestamptz
}

"""
update columns of table "resource_db_schema.resource"
"""
enum resource_db_schema_resource_update_column {
  """
  column name
  """
  created_at

  """
  column name
  """
  description

  """
  column name
  """
  id

  """
  column name
  """
  name

  """
  column name
  """
  resource_owner_actual

  """
  column name
  """
  updated_at
}

input resource_db_schema_resource_updates {
  """
  sets the columns of the filtered rows to the given values
  """
  _set: resource_db_schema_resource_set_input

  """
  filter the rows which have to be updated
  """
  where: resource_db_schema_resource_bool_exp!
}

"""
Private user data
"""
type resource_db_schema_user_private {
  avatar_name: String!
  created_at: timestamptz!
  email_address: String!
  id: uuid!
  id_public: uuid!
  id_resource_collection: uuid!
  name_first: String
  name_full: String
  name_last: String

  """
  An object relationship
  """
  resource: resource_db_schema_resource
  updated_at: timestamptz!

  """
  An object relationship
  """
  user_public: resource_db_schema_user_public
}

"""
aggregated selection of "resource_db_schema.user_private"
"""
type resource_db_schema_user_private_aggregate {
  aggregate: resource_db_schema_user_private_aggregate_fields
  nodes: [resource_db_schema_user_private!]!
}

"""
aggregate fields of "resource_db_schema.user_private"
"""
type resource_db_schema_user_private_aggregate_fields {
  count(
    columns: [resource_db_schema_user_private_select_column!]
    distinct: Boolean
  ): Int!
  max: resource_db_schema_user_private_max_fields
  min: resource_db_schema_user_private_min_fields
}

"""
Boolean expression to filter rows from the table "resource_db_schema.user_private". All fields are combined with a logical 'AND'.
"""
input resource_db_schema_user_private_bool_exp {
  _and: [resource_db_schema_user_private_bool_exp!]
  _not: resource_db_schema_user_private_bool_exp
  _or: [resource_db_schema_user_private_bool_exp!]
  avatar_name: String_comparison_exp
  created_at: timestamptz_comparison_exp
  email_address: String_comparison_exp
  id: uuid_comparison_exp
  id_public: uuid_comparison_exp
  id_resource_collection: uuid_comparison_exp
  name_first: String_comparison_exp
  name_full: String_comparison_exp
  name_last: String_comparison_exp
  resource: resource_db_schema_resource_bool_exp
  updated_at: timestamptz_comparison_exp
  user_public: resource_db_schema_user_public_bool_exp
}

"""
unique or primary key constraints on table "resource_db_schema.user_private"
"""
enum resource_db_schema_user_private_constraint {
  """
  unique or primary key constraint on columns "email_address"
  """
  user_private_email_address_key

  """
  unique or primary key constraint on columns "id_public"
  """
  user_private_id_public_key

  """
  unique or primary key constraint on columns "id_resource_collection"
  """
  user_private_id_resource_collection_key

  """
  unique or primary key constraint on columns "id"
  """
  user_private_pkey
}

"""
input type for inserting data into table "resource_db_schema.user_private"
"""
input resource_db_schema_user_private_insert_input {
  avatar_name: String
  created_at: timestamptz
  email_address: String
  id: uuid
  id_public: uuid
  id_resource_collection: uuid
  name_first: String
  name_full: String
  name_last: String
  resource: resource_db_schema_resource_obj_rel_insert_input
  updated_at: timestamptz
  user_public: resource_db_schema_user_public_obj_rel_insert_input
}

"""
aggregate max on columns
"""
type resource_db_schema_user_private_max_fields {
  avatar_name: String
  created_at: timestamptz
  email_address: String
  id: uuid
  id_public: uuid
  id_resource_collection: uuid
  name_first: String
  name_full: String
  name_last: String
  updated_at: timestamptz
}

"""
aggregate min on columns
"""
type resource_db_schema_user_private_min_fields {
  avatar_name: String
  created_at: timestamptz
  email_address: String
  id: uuid
  id_public: uuid
  id_resource_collection: uuid
  name_first: String
  name_full: String
  name_last: String
  updated_at: timestamptz
}

"""
response of any mutation on the table "resource_db_schema.user_private"
"""
type resource_db_schema_user_private_mutation_response {
  """
  number of rows affected by the mutation
  """
  affected_rows: Int!

  """
  data from the rows affected by the mutation
  """
  returning: [resource_db_schema_user_private!]!
}

"""
input type for inserting object relation for remote table "resource_db_schema.user_private"
"""
input resource_db_schema_user_private_obj_rel_insert_input {
  data: resource_db_schema_user_private_insert_input!

  """
  upsert condition
  """
  on_conflict: resource_db_schema_user_private_on_conflict
}

"""
on_conflict condition type for table "resource_db_schema.user_private"
"""
input resource_db_schema_user_private_on_conflict {
  constraint: resource_db_schema_user_private_constraint!
  update_columns: [resource_db_schema_user_private_update_column!]! = []
  where: resource_db_schema_user_private_bool_exp
}

"""
Ordering options when selecting data from "resource_db_schema.user_private".
"""
input resource_db_schema_user_private_order_by {
  avatar_name: order_by
  created_at: order_by
  email_address: order_by
  id: order_by
  id_public: order_by
  id_resource_collection: order_by
  name_first: order_by
  name_full: order_by
  name_last: order_by
  resource: resource_db_schema_resource_order_by
  updated_at: order_by
  user_public: resource_db_schema_user_public_order_by
}

"""
primary key columns input for table: resource_db_schema.user_private
"""
input resource_db_schema_user_private_pk_columns_input {
  id: uuid!
}

"""
select columns of table "resource_db_schema.user_private"
"""
enum resource_db_schema_user_private_select_column {
  """
  column name
  """
  avatar_name

  """
  column name
  """
  created_at

  """
  column name
  """
  email_address

  """
  column name
  """
  id

  """
  column name
  """
  id_public

  """
  column name
  """
  id_resource_collection

  """
  column name
  """
  name_first

  """
  column name
  """
  name_full

  """
  column name
  """
  name_last

  """
  column name
  """
  updated_at
}

"""
input type for updating data in table "resource_db_schema.user_private"
"""
input resource_db_schema_user_private_set_input {
  avatar_name: String
  created_at: timestamptz
  email_address: String
  id: uuid
  id_public: uuid
  id_resource_collection: uuid
  name_first: String
  name_full: String
  name_last: String
  updated_at: timestamptz
}

"""
Streaming cursor of the table "resource_db_schema_user_private"
"""
input resource_db_schema_user_private_stream_cursor_input {
  """
  Stream column input with initial value
  """
  initial_value: resource_db_schema_user_private_stream_cursor_value_input!

  """
  cursor ordering
  """
  ordering: cursor_ordering
}

"""
Initial value of the column from where the streaming should start
"""
input resource_db_schema_user_private_stream_cursor_value_input {
  avatar_name: String
  created_at: timestamptz
  email_address: String
  id: uuid
  id_public: uuid
  id_resource_collection: uuid
  name_first: String
  name_full: String
  name_last: String
  updated_at: timestamptz
}

"""
update columns of table "resource_db_schema.user_private"
"""
enum resource_db_schema_user_private_update_column {
  """
  column name
  """
  avatar_name

  """
  column name
  """
  created_at

  """
  column name
  """
  email_address

  """
  column name
  """
  id

  """
  column name
  """
  id_public

  """
  column name
  """
  id_resource_collection

  """
  column name
  """
  name_first

  """
  column name
  """
  name_full

  """
  column name
  """
  name_last

  """
  column name
  """
  updated_at
}

input resource_db_schema_user_private_updates {
  """
  sets the columns of the filtered rows to the given values
  """
  _set: resource_db_schema_user_private_set_input

  """
  filter the rows which have to be updated
  """
  where: resource_db_schema_user_private_bool_exp!
}

"""
Public user data
"""
type resource_db_schema_user_public {
  created_at: timestamptz
  id: uuid!
  id_private: uuid!
  updated_at: timestamptz

  """
  An object relationship
  """
  user_private: resource_db_schema_user_private!
}

"""
aggregated selection of "resource_db_schema.user_public"
"""
type resource_db_schema_user_public_aggregate {
  aggregate: resource_db_schema_user_public_aggregate_fields
  nodes: [resource_db_schema_user_public!]!
}

"""
aggregate fields of "resource_db_schema.user_public"
"""
type resource_db_schema_user_public_aggregate_fields {
  count(
    columns: [resource_db_schema_user_public_select_column!]
    distinct: Boolean
  ): Int!
  max: resource_db_schema_user_public_max_fields
  min: resource_db_schema_user_public_min_fields
}

"""
Boolean expression to filter rows from the table "resource_db_schema.user_public". All fields are combined with a logical 'AND'.
"""
input resource_db_schema_user_public_bool_exp {
  _and: [resource_db_schema_user_public_bool_exp!]
  _not: resource_db_schema_user_public_bool_exp
  _or: [resource_db_schema_user_public_bool_exp!]
  created_at: timestamptz_comparison_exp
  id: uuid_comparison_exp
  id_private: uuid_comparison_exp
  updated_at: timestamptz_comparison_exp
  user_private: resource_db_schema_user_private_bool_exp
}

"""
unique or primary key constraints on table "resource_db_schema.user_public"
"""
enum resource_db_schema_user_public_constraint {
  """
  unique or primary key constraint on columns "id_private"
  """
  user_public_id_private_key

  """
  unique or primary key constraint on columns "id"
  """
  user_public_pkey
}

"""
input type for inserting data into table "resource_db_schema.user_public"
"""
input resource_db_schema_user_public_insert_input {
  created_at: timestamptz
  id: uuid
  id_private: uuid
  updated_at: timestamptz
  user_private: resource_db_schema_user_private_obj_rel_insert_input
}

"""
aggregate max on columns
"""
type resource_db_schema_user_public_max_fields {
  created_at: timestamptz
  id: uuid
  id_private: uuid
  updated_at: timestamptz
}

"""
aggregate min on columns
"""
type resource_db_schema_user_public_min_fields {
  created_at: timestamptz
  id: uuid
  id_private: uuid
  updated_at: timestamptz
}

"""
response of any mutation on the table "resource_db_schema.user_public"
"""
type resource_db_schema_user_public_mutation_response {
  """
  number of rows affected by the mutation
  """
  affected_rows: Int!

  """
  data from the rows affected by the mutation
  """
  returning: [resource_db_schema_user_public!]!
}

"""
input type for inserting object relation for remote table "resource_db_schema.user_public"
"""
input resource_db_schema_user_public_obj_rel_insert_input {
  data: resource_db_schema_user_public_insert_input!

  """
  upsert condition
  """
  on_conflict: resource_db_schema_user_public_on_conflict
}

"""
on_conflict condition type for table "resource_db_schema.user_public"
"""
input resource_db_schema_user_public_on_conflict {
  constraint: resource_db_schema_user_public_constraint!
  update_columns: [resource_db_schema_user_public_update_column!]! = []
  where: resource_db_schema_user_public_bool_exp
}

"""
Ordering options when selecting data from "resource_db_schema.user_public".
"""
input resource_db_schema_user_public_order_by {
  created_at: order_by
  id: order_by
  id_private: order_by
  updated_at: order_by
  user_private: resource_db_schema_user_private_order_by
}

"""
primary key columns input for table: resource_db_schema.user_public
"""
input resource_db_schema_user_public_pk_columns_input {
  id: uuid!
}

"""
select columns of table "resource_db_schema.user_public"
"""
enum resource_db_schema_user_public_select_column {
  """
  column name
  """
  created_at

  """
  column name
  """
  id

  """
  column name
  """
  id_private

  """
  column name
  """
  updated_at
}

"""
input type for updating data in table "resource_db_schema.user_public"
"""
input resource_db_schema_user_public_set_input {
  created_at: timestamptz
  id: uuid
  id_private: uuid
  updated_at: timestamptz
}

"""
Streaming cursor of the table "resource_db_schema_user_public"
"""
input resource_db_schema_user_public_stream_cursor_input {
  """
  Stream column input with initial value
  """
  initial_value: resource_db_schema_user_public_stream_cursor_value_input!

  """
  cursor ordering
  """
  ordering: cursor_ordering
}

"""
Initial value of the column from where the streaming should start
"""
input resource_db_schema_user_public_stream_cursor_value_input {
  created_at: timestamptz
  id: uuid
  id_private: uuid
  updated_at: timestamptz
}

"""
update columns of table "resource_db_schema.user_public"
"""
enum resource_db_schema_user_public_update_column {
  """
  column name
  """
  created_at

  """
  column name
  """
  id

  """
  column name
  """
  id_private

  """
  column name
  """
  updated_at
}

input resource_db_schema_user_public_updates {
  """
  sets the columns of the filtered rows to the given values
  """
  _set: resource_db_schema_user_public_set_input

  """
  filter the rows which have to be updated
  """
  where: resource_db_schema_user_public_bool_exp!
}

type subscription_root {
  """
  fetch data from the table: "resource_db_schema.resource"
  """
  resource_db_schema_resource(
    """
    distinct select on columns
    """
    distinct_on: [resource_db_schema_resource_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [resource_db_schema_resource_order_by!]

    """
    filter the rows returned
    """
    where: resource_db_schema_resource_bool_exp
  ): [resource_db_schema_resource!]!

  """
  fetch aggregated fields from the table: "resource_db_schema.resource"
  """
  resource_db_schema_resource_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [resource_db_schema_resource_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [resource_db_schema_resource_order_by!]

    """
    filter the rows returned
    """
    where: resource_db_schema_resource_bool_exp
  ): resource_db_schema_resource_aggregate!

  """
  fetch data from the table: "resource_db_schema.resource" using primary key columns
  """
  resource_db_schema_resource_by_pk(id: uuid!): resource_db_schema_resource

  """
  fetch data from the table: "resource_db_schema.resource_collection"
  """
  resource_db_schema_resource_collection(
    """
    distinct select on columns
    """
    distinct_on: [resource_db_schema_resource_collection_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [resource_db_schema_resource_collection_order_by!]

    """
    filter the rows returned
    """
    where: resource_db_schema_resource_collection_bool_exp
  ): [resource_db_schema_resource_collection!]!

  """
  fetch aggregated fields from the table: "resource_db_schema.resource_collection"
  """
  resource_db_schema_resource_collection_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [resource_db_schema_resource_collection_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [resource_db_schema_resource_collection_order_by!]

    """
    filter the rows returned
    """
    where: resource_db_schema_resource_collection_bool_exp
  ): resource_db_schema_resource_collection_aggregate!

  """
  fetch data from the table: "resource_db_schema.resource_collection" using primary key columns
  """
  resource_db_schema_resource_collection_by_pk(
    id: uuid!
  ): resource_db_schema_resource_collection

  """
  fetch data from the table in a streaming manner: "resource_db_schema.resource_collection"
  """
  resource_db_schema_resource_collection_stream(
    """
    maximum number of rows returned in a single batch
    """
    batch_size: Int!

    """
    cursor to stream the results returned by the query
    """
    cursor: [resource_db_schema_resource_collection_stream_cursor_input]!

    """
    filter the rows returned
    """
    where: resource_db_schema_resource_collection_bool_exp
  ): [resource_db_schema_resource_collection!]!

  """
  fetch data from the table in a streaming manner: "resource_db_schema.resource"
  """
  resource_db_schema_resource_stream(
    """
    maximum number of rows returned in a single batch
    """
    batch_size: Int!

    """
    cursor to stream the results returned by the query
    """
    cursor: [resource_db_schema_resource_stream_cursor_input]!

    """
    filter the rows returned
    """
    where: resource_db_schema_resource_bool_exp
  ): [resource_db_schema_resource!]!

  """
  fetch data from the table: "resource_db_schema.user_private"
  """
  resource_db_schema_user_private(
    """
    distinct select on columns
    """
    distinct_on: [resource_db_schema_user_private_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [resource_db_schema_user_private_order_by!]

    """
    filter the rows returned
    """
    where: resource_db_schema_user_private_bool_exp
  ): [resource_db_schema_user_private!]!

  """
  fetch aggregated fields from the table: "resource_db_schema.user_private"
  """
  resource_db_schema_user_private_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [resource_db_schema_user_private_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [resource_db_schema_user_private_order_by!]

    """
    filter the rows returned
    """
    where: resource_db_schema_user_private_bool_exp
  ): resource_db_schema_user_private_aggregate!

  """
  fetch data from the table: "resource_db_schema.user_private" using primary key columns
  """
  resource_db_schema_user_private_by_pk(
    id: uuid!
  ): resource_db_schema_user_private

  """
  fetch data from the table in a streaming manner: "resource_db_schema.user_private"
  """
  resource_db_schema_user_private_stream(
    """
    maximum number of rows returned in a single batch
    """
    batch_size: Int!

    """
    cursor to stream the results returned by the query
    """
    cursor: [resource_db_schema_user_private_stream_cursor_input]!

    """
    filter the rows returned
    """
    where: resource_db_schema_user_private_bool_exp
  ): [resource_db_schema_user_private!]!

  """
  fetch data from the table: "resource_db_schema.user_public"
  """
  resource_db_schema_user_public(
    """
    distinct select on columns
    """
    distinct_on: [resource_db_schema_user_public_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [resource_db_schema_user_public_order_by!]

    """
    filter the rows returned
    """
    where: resource_db_schema_user_public_bool_exp
  ): [resource_db_schema_user_public!]!

  """
  fetch aggregated fields from the table: "resource_db_schema.user_public"
  """
  resource_db_schema_user_public_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [resource_db_schema_user_public_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [resource_db_schema_user_public_order_by!]

    """
    filter the rows returned
    """
    where: resource_db_schema_user_public_bool_exp
  ): resource_db_schema_user_public_aggregate!

  """
  fetch data from the table: "resource_db_schema.user_public" using primary key columns
  """
  resource_db_schema_user_public_by_pk(
    id: uuid!
  ): resource_db_schema_user_public

  """
  fetch data from the table in a streaming manner: "resource_db_schema.user_public"
  """
  resource_db_schema_user_public_stream(
    """
    maximum number of rows returned in a single batch
    """
    batch_size: Int!

    """
    cursor to stream the results returned by the query
    """
    cursor: [resource_db_schema_user_public_stream_cursor_input]!

    """
    filter the rows returned
    """
    where: resource_db_schema_user_public_bool_exp
  ): [resource_db_schema_user_public!]!
}

scalar timestamptz

"""
Boolean expression to compare columns of type "timestamptz". All fields are combined with logical 'AND'.
"""
input timestamptz_comparison_exp {
  _eq: timestamptz
  _gt: timestamptz
  _gte: timestamptz
  _in: [timestamptz!]
  _is_null: Boolean
  _lt: timestamptz
  _lte: timestamptz
  _neq: timestamptz
  _nin: [timestamptz!]
}

scalar uuid

"""
Boolean expression to compare columns of type "uuid". All fields are combined with logical 'AND'.
"""
input uuid_array_comparison_exp {
  """
  is the array contained in the given array value
  """
  _contained_in: [uuid!]

  """
  does the array contain the given value
  """
  _contains: [uuid!]
  _eq: [uuid!]
  _gt: [uuid!]
  _gte: [uuid!]
  _in: [[uuid!]!]
  _is_null: Boolean
  _lt: [uuid!]
  _lte: [uuid!]
  _neq: [uuid!]
  _nin: [[uuid!]!]
}

"""
Boolean expression to compare columns of type "uuid". All fields are combined with logical 'AND'.
"""
input uuid_comparison_exp {
  _eq: uuid
  _gt: uuid
  _gte: uuid
  _in: [uuid!]
  _is_null: Boolean
  _lt: uuid
  _lte: uuid
  _neq: uuid
  _nin: [uuid!]
}
